version: '3.7'
services:
  dind:
    image: docker:dind
    user: root
    privileged: true
    container_name: dind
    expose:
      - 2375
    networks:
      - jenkins_dind
    volumes:
      # docker-certs-ca:/certs/ca # used to store certificate authority (CA) certificates for secure communications
      #- docker-certs-client:/certs/client # used for storing client certificates used for secure communication
      - ./jenkins-data:/var/jenkins_home # creates a bind mount where the jenkins-data directory on host maps to the Jenkins home directory inside the container.
     # This allows for persistent Jenkins data outside of the container.
    environment:
      DOCKER_TLS_CERTDIR: "certs"

  jenkins:
    image: jenkins/jenkins:lts-jdk11
    user: root
    container_name: jenkins
    depends_on:
      - dind
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - ./jenkins-data:/var/jenkins_home # creates a bind mount where the jenkins-data directory on host maps to the Jenkins home directory inside the container.
     # This allows for persistent Jenkins data outside of the container.
      - /usr/bin/docker:/usr/bin/docker # maps the Docker binary on the host system (/usr/bin/docker) to a path in a Docker container.
      - /var/run/docker.sock:/var/run/docker.sock # Mount the Docker socket in a container, to manage or build images from another container.
      #- /docker-certs-client:/certs/client:ro # docker-certs-client directory as read-only in a Docker container, so client certificates are accessible without allowing any modifications from within the container. 
    environment:
      DOCKER_HOST: "tcp://dind:2375"
      DOCKER_CERT_PATH: /certs/client
      DOCKER_TLS_VERIFY: 1
    networks:
      - jenkins_dind

networks:
  jenkins_dind:
    driver: bridge
